name: Update Deployed Contract Addresses

on:
  repository_dispatch:
    types: [contract-addresses-updated]
  workflow_dispatch:

jobs:
  setup-prompt:
    runs-on: ubuntu-latest
    outputs:
      environment-data: ${{ steps.collect-env.outputs.data }}
      template: ${{ steps.setup-template.outputs.template }}
    
    steps:
    - name: Checkout otim-protocol
      uses: actions/checkout@v4
      with:
        repository: otimlabs/otim-protocol
        
    - name: Collect protocol environment settings
      id: collect-env
      run: |
        # Collect all environment files for processing
        ENV_DATA=""
        for network in mainnet testnet; do
          for file in .github/networks/$network/.env-*; do
            if [ -f "$file" ]; then
              ENV_DATA="${ENV_DATA}file: $(basename $file)\n$(cat $file)\n\n"
            fi
          done
        done
        
        # Store as output
        cat <<EOF >> $GITHUB_OUTPUT
        data<<EOF
        $ENV_DATA
        EOF
        EOF
        
    - name: Setup contract address MDX template
      id: setup-template
      run: |
        # Read template file and store as output
        cat <<EOF >> $GITHUB_OUTPUT
        template<<EOF
        $(cat .github/templates/deployed-addresses.mdx.tmpl)
        EOF
        EOF

  submit-prompt:
    runs-on: ubuntu-latest
    needs: setup-prompt
    outputs:
      mdx-content: ${{ steps.submit-prompt.outputs.content }}
    
    steps:
    - name: Submit prompt to OpenAI
      id: submit-prompt
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        SYSTEM_PROMPT="Generate MDX content for contract addresses from environment variables."
        
        ###
        USER_PROMPT="Generate MDX content following this template:

        ${{ needs.setup-prompt.outputs.template }}

        Extract EXPECTED_*_ADDRESS variables from these environment files:

        ${{ needs.setup-prompt.outputs.environment-data }}

        Requirements:
        - Extract non-token contract addresses (no owner/deployer)
        - Convert envvar (CONTRACT_NAME_ADDRESS) to ContractName format
        - Group core contracts (Gateway, OtimDelegate, InstructionStorage, FeeTokenRegistry, Treasury, ActionManager) under Core Contracts
        - Group action contracts under Action Contracts with chain tabs
        - Include common action contracts from .env-otim-* files in ALL chain tabs within each network (Mainnet/Testnet)
        - Do NOT create chain tabs for .env-otim-* files (they contain shared core contracts)
        - Output pure MDX content without code block wrappers (no \`\`\`mdx)"
        ###

        # Create JSON payload file
        cat > /tmp/openai_payload.json << EOF
        {
          "model": "gpt-4o",
          "messages": [
            {"role": "system", "content": "$SYSTEM_PROMPT"},
            {"role": "user", "content": "$USER_PROMPT"}
          ],
          "max_tokens": 6000,
          "temperature": 0
        }
        EOF

        # Call API and store output
        curl -s "https://api.openai.com/v1/chat/completions" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $OPENAI_API_KEY" \
          -d @/tmp/openai_payload.json | jq -r '.choices[0].message.content' | cat <<EOF >> $GITHUB_OUTPUT
        content<<EOF
        $(cat)
        EOF
        EOF

  process-prompt-result:
    runs-on: ubuntu-latest
    needs: submit-prompt
    
    steps:
    - name: Checkout docs repository
      uses: actions/checkout@v4
      
    - name: Write MDX content
      run: |
        # Write the generated content to the MDX file
        echo "${{ needs.submit-prompt.outputs.mdx-content }}" > docs/developers/deployed-addresses.mdx
        
    - name: Create PR for address updates
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Update deployed contract addresses (AI-generated)"
        title: "Update Deployed Contract Addresses (AI)"
        body: |
          Contract address extraction completed using AI.
          
          **Run**: [View logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
        branch: update-deployed-addresses-ai
        branch-suffix: short-commit-hash
        base: main
        delete-branch: true
